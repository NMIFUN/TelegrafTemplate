const Ref = require('../../models/ref')
const User = require('../../models/user')

const dateConfig = { year: 'numeric',month:'numeric',day:'numeric',hour:'numeric',minute: 'numeric'}
const Markup = require('telegraf/markup')

module.exports = async (ctx) => {
  let shift = Number(ctx.state[0])
  if(!shift) shift = 0
  if(shift<0) return ctx.answerCbQuery('–ù–µ–ª—å–∑—è', true)

  const count = await Ref.countDocuments()
  if(shift >= count) return ctx.editMessageText(`–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n
<code>https://t.me/${process.env.BOT_USERNAME}?start=ref-</code>code, –ø–µ—Ä–µ—Ö–æ–¥—è –ø–æ —Ç–∞–∫–æ–π —Å—Å—ã–ª–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ.
code - –ª—é–±–æ–π –∫–æ–¥ –¥–ª—è –æ—Ç–ª–∏—á–∏—è —Å—Å—ã–ª–∫–∏ –æ—Ç –¥—Ä—É–≥–∏—Ö —Å—Å—ã–ª–æ–∫`, Markup.inlineKeyboard(
    [Markup.callbackButton(`–ù–∞–∑–∞–¥`, `admin_back`)]
  ).extra({ parse_mode: 'HTML' }))

  await ctx.answerCbQuery()

  const results = await Ref.find().skip(shift).limit(10).sort({ _id: -1 })
  
  let content = results.map(async result => {
    const alive = await User.countDocuments({ from: `ref-${result.name}`, alive: true })

    return `<b>${result.name}</b>:
–í—Å–µ–≥–æ/–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: ${result.count} / ${result.uniqueCount}
–ù–æ–≤—ã—Ö/–ñ–∏–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${result.newCount} / ${alive}
–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–µ—Ä–µ—Ö–æ–¥: ${new Date(result.last).toLocaleString('ru', dateConfig)}`
  })
  content = await Promise.all(content)

  return ctx.editMessageText(`
<code>https://t.me/${process.env.BOT_USERNAME}?start=ref-</code>code, –ø–µ—Ä–µ—Ö–æ–¥—è –ø–æ —Ç–∞–∫–æ–π —Å—Å—ã–ª–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ.
code - –ª—é–±–æ–π –∫–æ–¥ –¥–ª—è –æ—Ç–ª–∏—á–∏—è —Å—Å—ã–ª–∫–∏ –æ—Ç –¥—Ä—É–≥–∏—Ö —Å—Å—ã–ª–æ–∫

${content.join('\n\n')}`, {
    parse_mode: 'HTML',
    reply_markup: Markup.inlineKeyboard([
      [Markup.callbackButton(`‚óÄÔ∏è`, `admin_sysRef_${shift-10}`),
      Markup.callbackButton(`${shift + results.length}/${count} üîÑ`, `admin_sysRef_${shift}`),
      Markup.callbackButton(`‚ñ∂Ô∏è`, `admin_sysRef_${shift+10}`)],
      [Markup.callbackButton(`–ù–∞–∑–∞–¥`, `admin_back`)]
    ])
  })
}