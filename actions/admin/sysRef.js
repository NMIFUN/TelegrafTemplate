const Ref = require('../../models/ref')
const dateConfig = { year: 'numeric',month:'numeric',day:'numeric',hour:'numeric',minute: 'numeric'}
const Markup = require('telegraf/markup')

module.exports = async (ctx) => {
  let a = Number(ctx.state[0])
  if(!a) a = 0
  if(a<0) return ctx.answerCbQuery('–ù–µ–ª—å–∑—è', true)

  const count = await Ref.countDocuments()
  if(a >= count) return ctx.answerCbQuery('–ù–µ–ª—å–∑—è', true)

  await ctx.answerCbQuery()

  const results = await Ref.find().skip( a ).limit( 10 )
  let content = ``
  for (const result of results) {
    content += `\n<b>${result.name}</b>:
–í—Å–µ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: ${result.count}
–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤: ${result.uniqueCount}
–ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${result.newCount}
–ü–µ—Ä–≤—ã–π –ø–µ—Ä–µ—Ö–æ–¥: ${new Date(result.first).toLocaleString('ru', dateConfig)}
–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–µ—Ä–µ—Ö–æ–¥: ${new Date(result.last).toLocaleString('ru', dateConfig)}\n`
  }

  return ctx.editMessageText(`
<code>https://t.me/${process.env.BOT_USERNAME}?start=ref-</code>code, –ø–µ—Ä–µ—Ö–æ–¥—è –ø–æ —Ç–∞–∫–æ–π —Å—Å—ã–ª–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ.
code - –ª—é–±–æ–π –∫–æ–¥ –¥–ª—è –æ—Ç–ª–∏—á–∏—è —Å—Å—ã–ª–∫–∏ –æ—Ç –¥—Ä—É–≥–∏—Ö —Å—Å—ã–ª–æ–∫
${content}`, {  
    parse_mode: 'HTML',
    reply_markup: Markup.inlineKeyboard([
      [Markup.callbackButton(`‚óÄÔ∏è`, `admin_sysRef_${a-10}`),
      Markup.callbackButton(`${a + results.length}/${count} üîÑ`, `admin_sysRef_${a}`),
      Markup.callbackButton(`‚ñ∂Ô∏è`, `admin_sysRef_${a+10}`)],
      [Markup.callbackButton(`‚óÄÔ∏è`, `admin_back`)]
    ])
  })
}